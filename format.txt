Формат записи объекта в строку:

1) Запись любого объекта пользовательского типа начинается с '{' И заканчивается '}'

2) Записанные поля объекта разделются символом ';'

3) Запись полей не пользовательских типов происходит в формате: key = "value";
   Например, поле с типом int, ключом "age" и значением "19" записывается так:
   age = "19";

4) Запись полей пользовательских типов происходит в формате: key = "{value}";
   Например, поле с ключом "person" и типом "Person", в котором, в свою очередь, есть поля типа
   String с ключом "name" и значением "Sergey", и
   int с ключом "age" и значением "19" записывается так:
   person = "{name = "Sergey"; age = "19"; }";

5) Запись полей типов List и Set с не пользовательскими типами происходит в формате key = [ "value1"; "value2"; ];
   Например, поле типа List<Integer>  с ключом "intList" и двумя элементами со значениями 1 и 2 записывается так:
   intList = [ "1"; "2"; ];

6) Запись полей типов List и Set с пользовательскими типами происходит в формате key = [ {value1}; {value2}; ];
   Например, поле типа List<Person> с ключом "persons" и двумя элементами типа Person, в которых, в свою очередь,
   есть поля типа
   String с ключом "name" и значениями "Sergey" и "Andrey" соответственно, и
   int с ключом "age" и значениями "19" и "20" соответственно, записывается так:
   persons = [ {name = "Sergey"; age = "19"; }; {name = "Andrey"; age = "20"; }; ];

7) С конкретными примерами записи объектов в строку можно ознакомиться: test -> java -> writer_tests -> WriterTest;

P. S. retainIdentity в работе реализовн, а поддержка рекордов - не реализована.
